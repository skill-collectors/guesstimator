name: Build and Deploy

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: "Install dependencies"
        run: npm ci --workspace=frontend

      - name: "Check"
        run: npm run check --workspace=frontend

      - name: "Lint"
        run: npm run lint --workspace=frontend

      - name: "Test"
        run: npm run test:unit --workspace=frontend

  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      bucketName: ${{ steps.pulumi.outputs.bucketName }}
      distributionId: ${{ steps.pulumi.outputs.distributionId }}
    env:
      HAVE_SECRETS: ${{ secrets.PULUMI_ACCESS_TOKEN != '' && secrets.AWS_REGION != '' && secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: "Install dependencies"
        run: npm ci --workspace=infra

      - name: "Lint"
        run: npm run lint --workspace=infra

      - name: "Test"
        run: npm run test --workspace=infra

      - name: Configure AWS Credentials
        if: env.HAVE_SECRETS == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install Pulumi CLI
        if: env.HAVE_SECRETS == 'true'
        uses: pulumi/setup-pulumi@v2
      - name: Install pulumi aws plugin
        if: env.HAVE_SECRETS == 'true'
        run: pulumi plugin install resource aws v4.30.0 # If you update this, also update bootstrap.sh
      - name: Deploy infrastructure
        if: env.HAVE_SECRETS == 'true'
        id: pulumi
        uses: pulumi/actions@v3
        with:
          command: up
          # GitHub actions does not currently support a ternary operator in conditions.
          # This is an ugly way to fake a ternary operator, but it works.
          stack-name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'qa' }}
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [check-frontend, deploy-infra]
    env:
      HAVE_SECRETS: ${{ secrets.AWS_REGION != '' && secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: "Install dependencies"
        run: npm ci --workspace=frontend

      - name: "Build frontend"
        run: npm run build --workspace=frontend
        env:
          VITE_PUBLIC_API_URL: ${{ needs.deploy-infra.outputs.apiUrl }}
          VITE_PUBLIC_API_KEY: ${{ needs.deploy-infra.outputs.apiKey }}

      - name: Deploy frontend build to S3 bucket
        if: env.HAVE_SECRETS == 'true'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ needs.deploy-infra.outputs.bucketName }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "frontend/build"

      - name: Invalidate Cloudfront cache
        if: env.HAVE_SECRETS == 'true'
        uses: awact/cloudfront-action@master
        env:
          SOURCE_PATH: "/"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION_ID: ${{ needs.deploy-infra.outputs.distributionId }}

      - name: Install playwright
        if: env.HAVE_SECRETS == 'true' && github.ref != 'refs/heads/main' && github.repository == 'skill-collectors/agile-poker'
        working-directory: frontend
        run: |
          npx playwright install-deps
          npx playwright install

      - name: Run Playwright Tests
        if: env.HAVE_SECRETS == 'true' && github.ref != 'refs/heads/main' && github.repository == 'skill-collectors/agile-poker'
        working-directory: frontend
        run: |
          npx playwright test e2e --reporter=html --config playwright.qa.config.ts
